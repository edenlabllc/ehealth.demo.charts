apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.image_crl.name }}
  labels:
    app: {{ .Values.image_crl.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.image_crl.name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.image_crl.name }}
    spec:
      containers:
      - name: {{ .Values.image_crl.name }}
        image: {{ .Values.image_crl.repository }}:{{ .Values.image_crl.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
          protocol: TCP
        env:
        {{- range $name, $value := .Values.env_crl }}
        {{- if not (empty $value) }}
        - name: {{ $name | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        - name: DB_PASSWORD
        {{- if .Values.env_db.POSTGRES_PASSWORD }}
          value: "{{ .Values.env_db.POSTGRES_PASSWORD }}"
        {{ else }}
          valueFrom:
             secretKeyRef:
               name: db
               key: DB_PASSWORD
        {{ end }}
        resources:
          requests:
            cpu: {{ .Values.resources_clr.cpu }}
            memory: {{ .Values.resources_clr.memory }}
          limits:
            cpu: {{ .Values.resources_clr.cpu_limit }}
            memory: {{ .Values.resources_clr.memory_limit }}
        readinessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 4000
        livenessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 4000
        {{- if .Values.nodeSelector_api }}
      nodeSelector:
        cloud.google.com/gke-nodepool: {{ .Values.nodeSelector_api}}
        {{ end }}
